#!/bin/bash -e
# gh-report: generate a draft report from GitHub activity (with false positives: filter them out from the output before reporting!)

function prop {
    grep "${1}" "${2}" | cut -d'=' -f2
}

ghtoken=$(prop 'oauth' $HOME/.github)

tmpfile=$(mktemp --suffix '.md')

echo 1>&2 "Will output to $tmpfile"

cutoff="$(date -I -u -d '7 days ago')"

function fetch_page() {
  echo 1>&2 "Fetching page $1 for filter $2"
  curl --fail-with-body -s -S -G -X GET -L \
    -H "Accept: application/vnd.github+json" \
    -H "Authorization: Bearer $ghtoken" \
    -H "X-GitHub-Api-Version: 2022-11-28" \
    https://api.github.com/search/issues \
    -d "page=$i" -d 'per_page=100' -d 'sort=updated' -d 'order=desc' \
    --data-urlencode "q=$2" \
    | jq -r 'if (.items | length) > 0 then . else halt_error end'
}

for who_filter in 'author:@me' 'involves:@me -author:@me'
do
  for issue_type in 'pr' 'issue'
  do
    filter="is:$issue_type $who_filter updated:>=$cutoff"
    echo "================================================"
    echo "$filter"
    echo "------------------------------------------------"
    {
      i=1
      while fetch_page $i "$filter"
      do
        ((i+=1))
        echo 1>&2 "Fetching additional page $i..."
      done
    } | jq -s -r 'if any(.["items"]) then map(.items) | flatten(1) | sort_by(.repository_url) | .[] | "[\(.repository_url | sub("^.*/repos/"; ""))#\(.number)](\(.html_url)) \(.title)" else . end'
  done
done >"$tmpfile"

xdg-open "$tmpfile"
